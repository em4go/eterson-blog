---
import type {ImageMetadata} from 'astro';

interface Props {
	title: string;
	subtitle: string;
	description: string;
	image?: string | ImageMetadata;
	ctaLabel?: string;
	ctaHref?: string;
	secondaryLabel?: string;
	secondaryHref?: string;
	accent?: 'purple' | 'cyan' | 'violet' | 'emerald';
}

const {
	title,
	subtitle,
	description,
	image,
	ctaLabel = 'View case study',
	ctaHref = '#',
	secondaryLabel,
	secondaryHref,
	accent = 'purple',
} = Astro.props as Props;

const stylesByAccent = {
	purple: {
		border: 'border-purple-400',
		shadow: 'shadow-purple-400',
		text: 'text-purple-300',
		bg: 'bg-purple-400',
	},
	cyan: {
		border: 'border-cyan-400',
		shadow: 'shadow-cyan-400',
		text: 'text-cyan-300',
		bg: 'bg-cyan-400',
	},
	violet: {
		border: 'border-fuchsia-400',
		shadow: 'shadow-fuchsia-400',
		text: 'text-fuchsia-300',
		bg: 'bg-fuchsia-400',
	},
	emerald: {
		border: 'border-emerald-400',
		shadow: 'shadow-emerald-400',
		text: 'text-emerald-300',
		bg: 'bg-emerald-400',
	},
} as const;

const s = stylesByAccent[accent];
---

<article
	class={`flex h-full flex-col justify-between bg-gray-900 border-2 ${s.border} p-5 sm:p-6 md:p-7 shadow-[8px_8px_0_0] ${s.shadow}`}
>
	<div>
		{
			image && (
				<img
					src={typeof image === 'string' ? image : image.src}
					alt='Project cover'
					class='mb-5 aspect-[16/9] w-full object-cover bg-gray-800'
					loading='lazy'
				/>
			)
		}
		<h3
			class='font-space-grotesk text-2xl sm:text-3xl font-black tracking-tight uppercase'
		>
			{title}
		</h3>
		<p
			class={`mt-1 text-xs sm:text-sm uppercase tracking-wider font-bold ${s.text}`}
		>
			{subtitle}
		</p>
		<p class='mt-4 text-cyan-100/90'>
			{description}
		</p>
	</div>

	<div class='mt-6 flex flex-wrap gap-3'>
		{
			ctaHref && (
				<a
					href={ctaHref}
					class={`inline-flex items-center gap-2.5 px-4 py-2 ${s.text} border-2 ${s.border} rounded-none shadow-[6px_6px_0_0] ${s.shadow} transition duration-75 hover:opacity-80`}
				>
					{ctaLabel}
				</a>
			)
		}
		{
			secondaryHref && (
				<a
					href={secondaryHref}
					class={`inline-flex items-center gap-2.5 px-4 py-2 text-gray-900 border-2 ${s.border} ${s.bg} rounded-none shadow-[6px_6px_0_0] ${s.shadow} transition duration-75 hover:opacity-80`}
				>
					{secondaryLabel}
				</a>
			)
		}
	</div>
</article>
